// Breakpoints
$breakpoint-m: 768px;
$breakpoint-t: 1024px;
$breakpoint-pc_h: 1460px;
$breakpoint-pc_bm: 1800px;


// mobile width
$m-width : 600px;





/* colors */
$colors: (
    _key: #635954, 
    _key2: #f0e1da,
    _key3: #ab9b92,
    _key4: #69605b,
    _key5: #f5f1ee,
    _key6: #ebe5df,
    _key7: #3c3734,
    _line: #f2f2f2,
    _line2: #e4e4e4,
    _bg: #F2F2F2,
    _bg2: #f5f5f5,
    _bg3 : #fcfcfc,
    _title: #333D4B,
    _font: #000,
    _font2: #635954,
    _font3: #ABABAB,
    _disabled: #A3A3A3,
    _disabled_bg: #e2e2e2,
    _grey: #9D9D9D,
    _grey2: #727272,
    _lightGrey: #e8e8e8,
    _desc: #333D4B,
    _red: #C70808,
    _red2: #FF5B5B,
    _red3: #FFD2D2,
    _bg_red: #FFF1F1,
    _blue: #0c59d8,
    _bg_blue: #F0F9FF,
    _yellow: #FCA004,
    _yellow2: #FFF6E6,
    _yellow3: #F96400,
    _green: #2F7D31,
    _green_l: #EFFBF2,
    _dim: rgba(#000,.3),
    _placeholder: #CBCBCB,
    _kakao: #F9E000,
    _kakao_ov: #E8D000,
    _white : #fff,
    _btn : #3a3532
);


$c_key : map-get($colors, _key);
$c_key2 : map-get($colors, _key2);
$c_key3 : map-get($colors, _key3);
$c_key4 : map-get($colors, _key4);
$c_key5 : map-get($colors, _key5);
$c_key6 : map-get($colors, _key6);
$c_key7 : map-get($colors, _key7);
$c_line : map-get($colors, _line);
$c_line2 : map-get($colors, _line2);
$c_bg : map-get($colors, _bg);
$c_bg2 : map-get($colors, _bg2);
$c_bg3 : map-get($colors, _bg3);
$c_grey : map-get($colors, _grey);
$c_grey2 : map-get($colors, _grey2);
$c_lightGrey : map-get($colors, _lightGrey);
$c_desc : map-get($colors, _desc);
$c_blue : map-get($colors, _blue);
$c_red : map-get($colors, _red);
$c_red2 : map-get($colors, _red2);
$c_red3 : map-get($colors, _red3);
$c_green : map-get($colors, _green);
$c_yellow : map-get($colors, _yellow);
$c_yellow2 : map-get($colors, _yellow2);
$c_title : map-get($colors, _title);
$c_font : map-get($colors, _font);
$c_font2 : map-get($colors, _font2);
$c_font3 : map-get($colors, _font3);
$c_placeholder : map-get($colors, _placeholder);
$c_disabled : map-get($colors, _disabled);
$c_disabled_bg : map-get($colors, _disabled_bg);
$c_btn : map-get($colors , _btn );

$fz: (
    _1: 12px, 
    _2: 13px, 
    _3: 14px, 
    _4: 15px,
    _5: 16px, 
    _6: 18px, 
    _7: 20px, 
    _8: 24px,
    _9: 29px
);
$fz_1 : map-get($fz, _1);
$fz_2 : map-get($fz, _2);
$fz_3 : map-get($fz, _3);
$fz_4 : map-get($fz, _4);
$fz_5 : map-get($fz, _5);
$fz_6 : map-get($fz, _6);
$fz_7 : map-get($fz, _7);
$fz_8 : map-get($fz, _8);
$fz_9 : map-get($fz, _9);




// colors
@each $key, $color in $colors {
    .fc#{$key} {
        color: $color;
    }
    .bg#{$key} {
        background-color: $color;
    }
    .bd#{$key} {
        border-color: $color;
    }
}
@each $key, $size in $fz {
    .fz#{$key} {
        font-size: $size;
    }
}


//Font
$font: "Pretendard", Pretendard, -apple-system, BlinkMacSystemFont, system-ui, Roboto, "Helvetica Neue", "Segoe UI", "Apple SD Gothic Neo", "Noto Sans KR", "Malgun Gothic", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;


//innerBox
$inner: 1280px;

@for $i from 1 through 100 {
    $w : 10*$i;
    .mw_#{$w} {
        min-width: #{$w}px !important;
    }
    .maxw_#{$w} {
        max-width: #{$w}px !important;
    }
    .h_#{$w} {
        height: #{$w}px;
    
    }
}

@for $i from 10 through 30 {
    .fz_#{$i} {
        font-size: #{$i}px;
    }
}

@for $i from 1 through 5 {
    $w : 5*$i;
    .w_#{$w} {
        width: #{$w}px;
        max-width: 100%;
    }
}


@for $i from 1 through 100 {
    $w : 10*$i;
    
    .w_#{$w} {
        width: #{$w}px;
        max-width: 100%;
    }
}

@for $i from 1 through 32 {
    $z : 5*$i;
    .mt#{$i} {
        margin-top: #{$i}px;
    }
    .ml#{$i} {
        margin-left: #{$i}px
    }
    .mr#{$i} {
        margin-right: #{$i}px
    }
    .mb#{$i} {
        margin-bottom: #{$i}px
    }

    .pt#{$i} {
        padding-top: #{$i}px;
    }
    .pl#{$i} {
        padding-left: #{$i}px
    }
    .pr#{$i} {
        padding-right: #{$i}px
    }
    .pb#{$i} {
        padding-bottom: #{$i}px
    }
    .pa#{$i} {
        padding: #{$i}px
    }
    .bd_radius#{$i} {
        border-radius: #{$i}px
    }
    
    .mt#{$z} {
        margin-top: #{$z}px;
    }
    .ml#{$z} {
        margin-left: #{$z}px
    }
    .mr#{$z} {
        margin-right: #{$z}px
    }
    .mb#{$z} {
        margin-bottom: #{$z}px
    }

    .pt#{$z} {
        padding-top: #{$z}px;
    }
    .pl#{$z} {
        padding-left: #{$z}px
    }
    .pr#{$z} {
        padding-right: #{$z}px
    }
    .pb#{$z} {
        padding-bottom: #{$z}px
    }
    .pa#{$z} {
        padding: #{$z}px
    }
    .bd_radius#{$z} {
        border-radius: #{$z}px
    }
}
@mixin list_col($col ,$gapX:12px, $gapY:20px){
    .col_#{$col} {
        gap: $gapY $gapX;
        .col_item {
            width: calc((100% / $col) - ((($col - 1)/$col)*$gapX));
        }
    }
}
@for $i from 1 through 10 {
    @include list_col($i ,12px, 20px);
    
}
@mixin flex_col($col ,$gapX, $gapY){
    display: flex;
    flex-wrap: wrap;
    gap: $gapY $gapX;
    .col_item {
        width: calc((100% / $col) - ((($col - 1)/$col)*$gapX));
    }
} 



@mixin flex_box($gap:10px, $wrap:wrap, $align:null ,$justify:null){
    display: flex;
    align-items: $align;
    justify-content: $justify;
    gap: $gap;
    flex-wrap: $wrap;
}





.d_flex {
    display: flex;
    @for $i from 1 through 40 {
        &._gap#{$i} {
            gap : #{$i}px
        } 
        &._gapX#{$i} {
            column-gap : #{$i}px;
        } 
        &._gapY#{$i} {
            row-gap : #{$i}px
        } 
    } 
    &.fw_w {
        flex-wrap: wrap;
    }
    &.fw_w_r {
        flex-wrap: wrap-reverse;
    }
    &.ai_t {
        align-items: flex-start;
    }
    &.ai_c {
        align-items: center;
    }
    &.ai_b {
        align-items: flex-end;
    }
    &.jc_l {
        justify-content: flex-start;
    }
    &.jc_c {
        justify-content: center;
    }
    &.jc_sa {
        justify-content: space-around;
    }
    &.jc_sb {
        justify-content: space-between;
    }
    &.jc_fe {
        justify-content: flex-end;
    }
    &.ty_col {
        flex-direction: column;
    }
}

.flex1 {
    flex: 1;
    min-width: 0;
    @include mobile {
        &.mw_max {
            flex: none;
        }
    }
}
.shrink0 {
    flex-shrink: 0;
}
.self_top {
    align-self: flex-start;
}
.self_c {
    align-self: center;
}
.self_bot {
    align-self: flex-end;
}

.d_block {
    display: block;
}
.ml_auto {
    margin-left: auto;
}
.mr_auto {
    margin-right: auto;
}
.taL {
    text-align: left;
}
.taC {
    text-align: center;
}
.taR {
    text-align: right;
}

.fwB {
    font-weight: bold;
}
.fwM {
    font-weight: 500;
}

@for $i from 1 through 9 {
    .fw_#{$i} {
        font-weight: #{$i}00;
    } 
} 


.no_select {
    user-select: none;
}

// .disabled {
//     pointer-events: none;
//     cursor: not-allowed;
//     opacity: 0.7;
//     filter: alpha(opacity=7);
//     -webkit-box-shadow: none;
//     box-shadow: none;
// }

.w100 {
    width: 100%;
}
.h100 {
    height: 100%;
}
.lh0 {
    line-height: 0;
}
.lh1 {
    line-height: 1;
}

@for $i from 1 through 9 {
    .lh_1_#{$i} {
        line-height: 1 + $i/10;
    }
    .fw_#{$i} {
       font-weight: $i*100
    }
}

.hv {
    &:hover {
        background-color: $c_bg;
    }
}

.posR {
    position: relative;
}
.posA {
    position: absolute;
}
.tdU {
    text-decoration: underline;
}
.bdT {
    border-top: 1px solid $c_line;
}
.bdB {
    border-bottom: 1px solid $c_line;
}
.bdT2 {
    border-top: 1px solid $c_line2;
}
.bdB2 {
    border-bottom: 1px solid $c_line2;
}

.mw_max {
    @include mobile {
        width: 100%;
    }
    
}
.cursor_pointer {
    cursor: pointer;
}
.ov_h {
    overflow: hidden;
}

/* 시각적 숨김(접근성 보존) */
.vHidden {
  position: absolute;
  width: 1px; height: 1px; overflow: hidden;
  clip: rect(0 0 0 0); white-space: nowrap; clip-path: inset(50%);
}